const mongoose = require('mongoose');
const bcrypt = require('bcrypt');
const saltRounds = 10; // or more, depending on security requirements

// Define the schema for the user
const userSchema = new mongoose.Schema({
  // Define a unique ID for the user
  id: {
    type: mongoose.Schema.Types.ObjectId,
    required: true,
    auto: true // Automatically generated by MongoDB
  },
  // Define the username field
  username: {
    type: String,
    required: true,
    unique: true, // Ensure usernames are unique
    trim: true // Trims whitespace from the username
  },
  // Define the password field
  password: {
    type: String,
    required: true
  }
}, {
  timestamps: true // Adds createdAt and updatedAt timestamps
});

userSchema.pre('save', function(next) {
    // Hash the password before saving the user model
    if (this.isModified('password')) {
      this.password = bcrypt.hashSync(this.password, saltRounds);
    }
    next();
  });
  
// Compile the schema into a model
const User = mongoose.model('User', userSchema);

module.exports = User;
